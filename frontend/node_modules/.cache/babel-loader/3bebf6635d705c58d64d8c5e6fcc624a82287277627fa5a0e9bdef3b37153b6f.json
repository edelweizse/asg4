{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\backend\\\\asg4\\\\frontend\\\\src\\\\components\\\\CloseValueLAreaChart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { AreaChart, Area, ResponsiveContainer, XAxis, YAxis, Tooltip } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CloseValueLAreaChart = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [startDate, setStartDate] = useState('2008-03-19');\n  const [endDate, setEndDate] = useState('2024-10-21');\n  const MIN_DATE = new Date('2008-03-19');\n  const MAX_DATE = new Date('2024-10-21');\n  const getData = async (start_date, end_date) => {\n    try {\n      const res = await axios.get(`http://localhost:5000/data?field=Close&start_date=${start_date}&end_date=${end_date}`);\n      setData(res.data);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  useEffect(() => {\n    getData(startDate, endDate);\n  }, [startDate, endDate]);\n  const handleStartDateChange = e => {\n    const selectedDate = new Date(e.target.value);\n    if (selectedDate >= MIN_DATE && selectedDate <= MAX_DATE) {\n      setStartDate(e.target.value);\n      if (selectedDate > new Date(endDate)) {\n        setEndDate(e.target.value); // Ensure end date is always after start date\n      }\n    }\n  };\n  const handleEndDateChange = e => {\n    const selectedDate = new Date(e.target.value);\n    if (selectedDate >= MIN_DATE && selectedDate <= MAX_DATE && selectedDate > new Date(startDate)) {\n      setEndDate(e.target.value);\n    }\n  };\n  const formatXAxis = tickItem => {\n    const date = new Date(tickItem);\n    return date.toLocaleDateString(); // Format to a readable date format\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full h-full p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center mb-4 gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Start Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: startDate,\n          onChange: handleStartDateChange,\n          className: \"ml-2 p-1 rounded border border-gray-300 bg-gray-800 text-gray-100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"End Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: endDate,\n          onChange: handleEndDateChange,\n          className: \"ml-2 p-1 rounded border border-gray-300 bg-gray-800 text-gray-100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(AreaChart, {\n        data: data,\n        margin: {\n          top: 10,\n          right: 30,\n          left: 0,\n          bottom: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"Date\",\n          tickFormatter: formatXAxis\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Area, {\n          type: \"monotone\",\n          dataKey: \"Close\",\n          stroke: \"#8884d8\",\n          fill: \"#8884d8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(CloseValueLAreaChart, \"ZJ652nXjMybPxL2hN2lv69YWzxo=\");\n_c = CloseValueLAreaChart;\nexport default CloseValueLAreaChart;\nvar _c;\n$RefreshReg$(_c, \"CloseValueLAreaChart\");","map":{"version":3,"names":["React","useEffect","useState","axios","AreaChart","Area","ResponsiveContainer","XAxis","YAxis","Tooltip","jsxDEV","_jsxDEV","CloseValueLAreaChart","_s","data","setData","startDate","setStartDate","endDate","setEndDate","MIN_DATE","Date","MAX_DATE","getData","start_date","end_date","res","get","error","console","handleStartDateChange","e","selectedDate","target","value","handleEndDateChange","formatXAxis","tickItem","date","toLocaleDateString","className","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","width","height","margin","top","right","left","bottom","dataKey","tickFormatter","stroke","fill","_c","$RefreshReg$"],"sources":["D:/Projects/backend/asg4/frontend/src/components/CloseValueLAreaChart.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { AreaChart, Area, ResponsiveContainer, XAxis, YAxis, Tooltip } from 'recharts';\r\n\r\nconst CloseValueLAreaChart = () => {\r\n  const [data, setData] = useState([]);\r\n  const [startDate, setStartDate] = useState('2008-03-19');\r\n  const [endDate, setEndDate] = useState('2024-10-21');\r\n\r\n  const MIN_DATE = new Date('2008-03-19');\r\n  const MAX_DATE = new Date('2024-10-21');\r\n\r\n  const getData = async (start_date, end_date) => {\r\n    try {\r\n      const res = await axios.get(`http://localhost:5000/data?field=Close&start_date=${start_date}&end_date=${end_date}`);\r\n      setData(res.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData(startDate, endDate);\r\n  }, [startDate, endDate]);\r\n\r\n  const handleStartDateChange = (e) => {\r\n    const selectedDate = new Date(e.target.value);\r\n    if (selectedDate >= MIN_DATE && selectedDate <= MAX_DATE) {\r\n      setStartDate(e.target.value);\r\n      if (selectedDate > new Date(endDate)) {\r\n        setEndDate(e.target.value); // Ensure end date is always after start date\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleEndDateChange = (e) => {\r\n    const selectedDate = new Date(e.target.value);\r\n    if (selectedDate >= MIN_DATE && selectedDate <= MAX_DATE && selectedDate > new Date(startDate)) {\r\n      setEndDate(e.target.value);\r\n    }\r\n  };\r\n\r\n  const formatXAxis = (tickItem) => {\r\n    const date = new Date(tickItem);\r\n    return date.toLocaleDateString(); // Format to a readable date format\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full h-full p-4\">\r\n      <div className=\"flex items-center mb-4 gap-4\">\r\n        <label>\r\n          Start Date:\r\n          <input \r\n            type=\"date\" \r\n            value={startDate} \r\n            onChange={handleStartDateChange} \r\n            className=\"ml-2 p-1 rounded border border-gray-300 bg-gray-800 text-gray-100\"\r\n          />\r\n        </label>\r\n        <label>\r\n          End Date:\r\n          <input \r\n            type=\"date\" \r\n            value={endDate} \r\n            onChange={handleEndDateChange} \r\n            className=\"ml-2 p-1 rounded border border-gray-300 bg-gray-800 text-gray-100\"\r\n          />\r\n        </label>\r\n      </div>\r\n      \r\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n        <AreaChart data={data} margin={{ top: 10, right: 30, left: 0, bottom: 0 }}>\r\n          <XAxis dataKey=\"Date\" tickFormatter={formatXAxis} />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Area type=\"monotone\" dataKey=\"Close\" stroke=\"#8884d8\" fill=\"#8884d8\" />\r\n        </AreaChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CloseValueLAreaChart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,IAAI,EAAEC,mBAAmB,EAAEC,KAAK,EAAEC,KAAK,EAAEC,OAAO,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvF,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,YAAY,CAAC;EACxD,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,YAAY,CAAC;EAEpD,MAAMkB,QAAQ,GAAG,IAAIC,IAAI,CAAC,YAAY,CAAC;EACvC,MAAMC,QAAQ,GAAG,IAAID,IAAI,CAAC,YAAY,CAAC;EAEvC,MAAME,OAAO,GAAG,MAAAA,CAAOC,UAAU,EAAEC,QAAQ,KAAK;IAC9C,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMvB,KAAK,CAACwB,GAAG,CAAC,qDAAqDH,UAAU,aAAaC,QAAQ,EAAE,CAAC;MACnHV,OAAO,CAACW,GAAG,CAACZ,IAAI,CAAC;IACnB,CAAC,CAAC,OAAOc,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED3B,SAAS,CAAC,MAAM;IACdsB,OAAO,CAACP,SAAS,EAAEE,OAAO,CAAC;EAC7B,CAAC,EAAE,CAACF,SAAS,EAAEE,OAAO,CAAC,CAAC;EAExB,MAAMY,qBAAqB,GAAIC,CAAC,IAAK;IACnC,MAAMC,YAAY,GAAG,IAAIX,IAAI,CAACU,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC;IAC7C,IAAIF,YAAY,IAAIZ,QAAQ,IAAIY,YAAY,IAAIV,QAAQ,EAAE;MACxDL,YAAY,CAACc,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC;MAC5B,IAAIF,YAAY,GAAG,IAAIX,IAAI,CAACH,OAAO,CAAC,EAAE;QACpCC,UAAU,CAACY,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAC9B;IACF;EACF,CAAC;EAED,MAAMC,mBAAmB,GAAIJ,CAAC,IAAK;IACjC,MAAMC,YAAY,GAAG,IAAIX,IAAI,CAACU,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC;IAC7C,IAAIF,YAAY,IAAIZ,QAAQ,IAAIY,YAAY,IAAIV,QAAQ,IAAIU,YAAY,GAAG,IAAIX,IAAI,CAACL,SAAS,CAAC,EAAE;MAC9FG,UAAU,CAACY,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC;IAC5B;EACF,CAAC;EAED,MAAME,WAAW,GAAIC,QAAQ,IAAK;IAChC,MAAMC,IAAI,GAAG,IAAIjB,IAAI,CAACgB,QAAQ,CAAC;IAC/B,OAAOC,IAAI,CAACC,kBAAkB,CAAC,CAAC,CAAC,CAAC;EACpC,CAAC;EAED,oBACE5B,OAAA;IAAK6B,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChC9B,OAAA;MAAK6B,SAAS,EAAC,8BAA8B;MAAAC,QAAA,gBAC3C9B,OAAA;QAAA8B,QAAA,GAAO,aAEL,eAAA9B,OAAA;UACE+B,IAAI,EAAC,MAAM;UACXR,KAAK,EAAElB,SAAU;UACjB2B,QAAQ,EAAEb,qBAAsB;UAChCU,SAAS,EAAC;QAAmE;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9E,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACRpC,OAAA;QAAA8B,QAAA,GAAO,WAEL,eAAA9B,OAAA;UACE+B,IAAI,EAAC,MAAM;UACXR,KAAK,EAAEhB,OAAQ;UACfyB,QAAQ,EAAER,mBAAoB;UAC9BK,SAAS,EAAC;QAAmE;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9E,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAENpC,OAAA,CAACL,mBAAmB;MAAC0C,KAAK,EAAC,MAAM;MAACC,MAAM,EAAC,MAAM;MAAAR,QAAA,eAC7C9B,OAAA,CAACP,SAAS;QAACU,IAAI,EAAEA,IAAK;QAACoC,MAAM,EAAE;UAAEC,GAAG,EAAE,EAAE;UAAEC,KAAK,EAAE,EAAE;UAAEC,IAAI,EAAE,CAAC;UAAEC,MAAM,EAAE;QAAE,CAAE;QAAAb,QAAA,gBACxE9B,OAAA,CAACJ,KAAK;UAACgD,OAAO,EAAC,MAAM;UAACC,aAAa,EAAEpB;QAAY;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACpDpC,OAAA,CAACH,KAAK;UAAAoC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACTpC,OAAA,CAACF,OAAO;UAAAmC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACXpC,OAAA,CAACN,IAAI;UAACqC,IAAI,EAAC,UAAU;UAACa,OAAO,EAAC,OAAO;UAACE,MAAM,EAAC,SAAS;UAACC,IAAI,EAAC;QAAS;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEV,CAAC;AAAClC,EAAA,CA5EID,oBAAoB;AAAA+C,EAAA,GAApB/C,oBAAoB;AA8E1B,eAAeA,oBAAoB;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}