{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\backend\\\\asg4\\\\frontend\\\\src\\\\components\\\\LineChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, ResponsiveContainer } from 'recharts';\nimport { useIntervalStore } from '../store'; // Zustand store for independent state\nimport dayjs from 'dayjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DiagramWithInterval = ({\n  fetchData,\n  dataKey\n}) => {\n  _s();\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [granularity, setGranularity] = useState('years');\n  const [granularityOptions, setGranularityOptions] = useState(['years']);\n  const {\n    selectedInterval,\n    setSelectedInterval\n  } = useIntervalStore();\n  const minDate = '2008-03-19';\n  const maxDate = '2024-10-21';\n  const validateDateRange = () => {\n    if (startDate && endDate) {\n      const start = dayjs(startDate);\n      const end = dayjs(endDate);\n      const intervalMonths = end.diff(start, 'months');\n      const intervalYears = end.diff(start, 'years');\n      let options = [];\n      if (intervalMonths <= 1) options.push('days');\n      if (intervalMonths >= 1 || intervalMonths >= 2) options.push('weeks', 'months');\n      if (intervalYears >= 1) options.push('quartiles');\n      if (intervalYears >= 2) options.push('years');\n      setGranularityOptions(options);\n    }\n  };\n  const handleGranularityChange = e => {\n    setGranularity(e.target.value);\n  };\n  useEffect(() => {\n    validateDateRange();\n  }, [startDate, endDate]);\n  useEffect(() => {\n    if (startDate && endDate && granularity) {\n      setSelectedInterval({\n        startDate,\n        endDate,\n        granularity\n      });\n      fetchData({\n        startDate,\n        endDate,\n        granularity\n      });\n    }\n  }, [startDate, endDate, granularity, fetchData, setSelectedInterval]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex space-x-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        min: minDate,\n        max: maxDate,\n        value: startDate,\n        onChange: e => setStartDate(e.target.value),\n        className: \"border border-gray-300 rounded px-2 py-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        min: minDate,\n        max: maxDate,\n        value: endDate,\n        onChange: e => setEndDate(e.target.value),\n        className: \"border border-gray-300 rounded px-2 py-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: granularity,\n        onChange: handleGranularityChange,\n        className: \"border border-gray-300 rounded px-2 py-1\",\n        children: granularityOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option,\n          children: [\"By \", option]\n        }, option, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 400,\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: dataKey,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"value\",\n          stroke: \"#8884d8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(DiagramWithInterval, \"z6h8n9KrdQTFQgtsK4NSXWQ/tkY=\", false, function () {\n  return [useIntervalStore];\n});\n_c = DiagramWithInterval;\nexport default DiagramWithInterval;\nvar _c;\n$RefreshReg$(_c, \"DiagramWithInterval\");","map":{"version":3,"names":["React","useState","useEffect","LineChart","Line","XAxis","YAxis","Tooltip","CartesianGrid","ResponsiveContainer","useIntervalStore","dayjs","jsxDEV","_jsxDEV","DiagramWithInterval","fetchData","dataKey","_s","startDate","setStartDate","endDate","setEndDate","granularity","setGranularity","granularityOptions","setGranularityOptions","selectedInterval","setSelectedInterval","minDate","maxDate","validateDateRange","start","end","intervalMonths","diff","intervalYears","options","push","handleGranularityChange","e","target","value","className","children","type","min","max","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","option","width","height","data","strokeDasharray","stroke","_c","$RefreshReg$"],"sources":["D:/Projects/backend/asg4/frontend/src/components/LineChart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, ResponsiveContainer } from 'recharts';\r\nimport { useIntervalStore } from '../store'; // Zustand store for independent state\r\nimport dayjs from 'dayjs';\r\n\r\nconst DiagramWithInterval = ({ fetchData, dataKey }) => {\r\n    const [startDate, setStartDate] = useState('');\r\n    const [endDate, setEndDate] = useState('');\r\n    const [granularity, setGranularity] = useState('years');\r\n    const [granularityOptions, setGranularityOptions] = useState(['years']);\r\n\r\n    const { selectedInterval, setSelectedInterval } = useIntervalStore();\r\n\r\n    const minDate = '2008-03-19';\r\n    const maxDate = '2024-10-21';\r\n\r\n    const validateDateRange = () => {\r\n        if (startDate && endDate) {\r\n            const start = dayjs(startDate);\r\n            const end = dayjs(endDate);\r\n            const intervalMonths = end.diff(start, 'months');\r\n            const intervalYears = end.diff(start, 'years');\r\n            \r\n            let options = [];\r\n            if (intervalMonths <= 1) options.push('days');\r\n            if (intervalMonths >= 1 || intervalMonths >= 2) options.push('weeks', 'months');\r\n            if (intervalYears >= 1) options.push('quartiles');\r\n            if (intervalYears >= 2) options.push('years');\r\n            \r\n            setGranularityOptions(options);\r\n        }\r\n    };\r\n\r\n    const handleGranularityChange = (e) => {\r\n        setGranularity(e.target.value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        validateDateRange();\r\n    }, [startDate, endDate]);\r\n\r\n    useEffect(() => {\r\n        if (startDate && endDate && granularity) {\r\n            setSelectedInterval({ startDate, endDate, granularity });\r\n            fetchData({ startDate, endDate, granularity });\r\n        }\r\n    }, [startDate, endDate, granularity, fetchData, setSelectedInterval]);\r\n\r\n    return (\r\n        <div className=\"flex flex-col items-center space-y-4\">\r\n            <div className=\"flex space-x-4\">\r\n                <input\r\n                    type=\"date\"\r\n                    min={minDate}\r\n                    max={maxDate}\r\n                    value={startDate}\r\n                    onChange={(e) => setStartDate(e.target.value)}\r\n                    className=\"border border-gray-300 rounded px-2 py-1\"\r\n                />\r\n                <input\r\n                    type=\"date\"\r\n                    min={minDate}\r\n                    max={maxDate}\r\n                    value={endDate}\r\n                    onChange={(e) => setEndDate(e.target.value)}\r\n                    className=\"border border-gray-300 rounded px-2 py-1\"\r\n                />\r\n                <select\r\n                    value={granularity}\r\n                    onChange={handleGranularityChange}\r\n                    className=\"border border-gray-300 rounded px-2 py-1\"\r\n                >\r\n                    {granularityOptions.map((option) => (\r\n                        <option key={option} value={option}>\r\n                            By {option}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            <ResponsiveContainer width=\"100%\" height={400}>\r\n                <LineChart data={dataKey}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"date\" />\r\n                    <YAxis />\r\n                    <Tooltip />\r\n                    <Line type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" />\r\n                </LineChart>\r\n            </ResponsiveContainer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DiagramWithInterval;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}